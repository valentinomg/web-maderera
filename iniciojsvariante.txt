const Inicio = () => {
  document.body.className = "body-inicio";
  const [contenido, setContenido] = useState("inicio");
  const [carrito, setCarrito] = useState([]);
  const [total, setTotal] = useState(0);
  const [userName, setUserName] = useState(null);
  const [menuVisible, setMenuVisible] = useState(false);
  const [userID, setUserID] = useState(null);
  const navigate = useNavigate();
  const db = getDatabase();

  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (user) => {
      if (user) {
        setUserID(user.uid);
        const username = localStorage.getItem("username") || "Usuario";
        setUserName(username);
        cargarCarrito(user.uid);
      } else {
        setUserName(null);
        setUserID(null);
        setCarrito([]);
      }
    });
    return () => unsubscribe();
  }, []);

  useEffect(() => {
    const nuevoTotal = carrito.reduce((acc, item) => acc + item.precio * item.cantidad, 0);
    setTotal(nuevoTotal);
    if (userID) {
      guardarCarrito(userID, carrito);
    }
  }, [carrito]);

  const guardarCarrito = (uid, carrito) => {
    set(ref(db, `carritos/${uid}`), carrito);
  };

  const cargarCarrito = async (uid) => {
    const carritoRef = ref(db, `carritos/${uid}`);
    const snapshot = await get(carritoRef);
    if (snapshot.exists()) {
      setCarrito(snapshot.val());
    }
  };

  const actualizarCarrito = (producto) => {
    setCarrito((prevCarrito) => {
      const existe = prevCarrito.find((item) => item.id === producto.id);
      if (existe) {
        return prevCarrito.map((item) =>
          item.id === producto.id ? { ...item, cantidad: item.cantidad + 1 } : item
        );
      } else {
        return [...prevCarrito, { ...producto, cantidad: 1 }];
      }
    });
  };

  const eliminarProducto = (id) => {
    setCarrito((prevCarrito) => prevCarrito.filter((item) => item.id !== id));
  };

  const vaciarCarrito = () => {
    setCarrito([]);
  };

  const agregarUnoMas = (id) => {
    setCarrito((prevCarrito) =>
      prevCarrito.map((item) =>
        item.id === id ? { ...item, cantidad: item.cantidad + 1 } : item
      )
    );
  };

  const quitarUno = (id) => {
    setCarrito((prevCarrito) =>
      prevCarrito
        .map((item) =>
          item.id === id ? { ...item, cantidad: item.cantidad - 1 } : item
        )
        .filter((item) => item.cantidad > 0)
    );
  };

  const handleLogout = () => {
    signOut(auth)
      .then(() => {
        localStorage.removeItem("userID");
        localStorage.removeItem("username");
        localStorage.removeItem("userRole");
        setUserName(null);
        setMenuVisible(false);
        setCarrito([]);
        navigate("/");
      })
      .catch((error) => console.error("Error al cerrar sesión:", error));
  };

  return (
    <div className="w-100 text-center hader">
      <header className="navbar navbar-expand-lg navbar-light bg-light p-0 header">
        <div className="container-fluid">
          <a className="navbar-brand" href="/">
            <img src="/images/logomadera.jpg" alt="Logo" style={{ height: "60px", width: "140px" }} />
          </a>
          <div className="collapse navbar-collapse" id="navbarNav">
            <div className="position-relative">
              {userName ? (
                <div className="dropdown">
                  <button className="btn btn-primary me-2 botonlogin" onClick={() => setMenuVisible(!menuVisible)}>
                    <i className="bi bi-person-circle me-1"></i> {userName}
                  </button>
                  {menuVisible && (
                    <ul className="dropdown-menu show" style={{ position: "absolute", top: "100%", left: "0" }}>
                      <li><a className="dropdown-item" href="/perfil">Mi Perfil</a></li>
                      <li><a className="dropdown-item" href="/pedidos">Mis Pedidos</a></li>
                      <li><hr className="dropdown-divider" /></li>
                      <li><button className="dropdown-item text-danger" onClick={handleLogout}>Cerrar Sesión</button></li>
                    </ul>
                  )}
                </div>
              ) : (
                <a href="/Login" className="btn btn-primary me-2 botonlogin">
                  <i className="bi bi-person-circle me-1"></i> Iniciar Sesión
                </a>
              )}
              <button className="btn btn- botoncarri" data-bs-toggle="modal" data-bs-target="#carritoModal">
                <i className="bi bi-cart-fill me-1"></i> {carrito.length}
              </button>
            </div>
          </div>
        </div>
      </header>

      <div className="modal fade" id="carritoModal" tabIndex="-1" aria-hidden="true">
        <div className="modal-dialog">
          <div className="modal-content">
            <div className="modal-header">
              <h5 className="modal-title">Carrito de Compras</h5>
              <button type="button" className="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div className="modal-body">
              {carrito.length > 0 ? (
                <ul>
                  {carrito.map((item) => (
                    <li key={item.id} className="d-flex align-items-center justify-content-between">
                      {item.nombre} - S/ {item.precio} (x{item.cantidad})
                      <div className="d-flex gap-2">
                        <button className="btn btn-sm btn-success" onClick={() => agregarUnoMas(item.id)}>+</button>
                        <button className="btn btn-sm btn-warning" onClick={() => quitarUno(item.id)}>-</button>
                        <button className="btn btn-sm btn-danger" onClick={() => eliminarProducto(item.id)}>X</button>
                      </div>
                    </li>
                  ))}
                </ul>
              ) : (
                <p>Tu carrito está vacío.</p>
              )}
              <h5 className="mt-3">Total: S/. {total.toFixed(2)}</h5>
            </div>
            <div className="modal-footer">
              {carrito.length > 0 && (
                <button className="btn btn-warning" onClick={vaciarCarrito}>
                  Vaciar Carrito
                </button>
              )}
              <button type="button" className="btn btn-secondary" data-bs-dismiss="modal">
                Cerrar
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Menú de navegación */}
      <nav className="navbar navbar-expand-lg navbar-dark custom-navbar">
        <div className="container-fluid">
          <button className="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#menuNav">
            ☰
          </button>
          <div className="collapse navbar-collapse" id="menuNav">
            <ul className="navbar-nav mx-auto d-flex justify-content-around lista-da">
              <li className="nav-item namebarra"><a className="nav-link" href="#" onClick={() => setContenido("inicio")}>INICIO</a></li>
              <li className="nav-item namebarra"><a className="nav-link" href="#" onClick={() => setContenido("nosotros")}>NOSOTROS</a></li>
              <li className="nav-item namebarra"><a className="nav-link" href="#" onClick={() => setContenido("productos")}>PRODUCTOS</a></li>
              <li className="nav-item namebarra"><a className="nav-link" href="#" onClick={() => setContenido("servicios")}>SERVICIOS</a></li>
              <li className="nav-item namebarra"><a className="nav-link" href="#" onClick={() => setContenido("clientes")}>CLIENTES</a></li>
              <li className="nav-item namebarra"><a className="nav-link" href="#" onClick={() => setContenido("contacto")}>CONTACTOS</a></li>
            </ul>
          </div>
        </div>
      </nav>

      {/* Contenido dinámico */}
      <div className="containergene">
        {contenido === "inicio" && <InicioContent />}
        {contenido === "productos" && <ProductosContent actualizarCarrito={actualizarCarrito} />}
        {contenido === "servicios" && <ServiciosContent />}
        {contenido === "contacto" && <ContactoContent />}
        {contenido === "nosotros" && <NosotrosContent />}
        {contenido === "clientes" && <ClienteContent />}
      </div>

        {/* Footer */}
        <footer className="footer">
        <div className="container-footer">
          <div className="footer-row">
            <div className="links">
              <h4>Compañía</h4>
              <ul>
                <li><a onClick={() => setContenido("nosotros")}>Nosotros</a></li>
                <li><a onClick={() => setContenido("servicios")}>Nuestros servicios</a></li>
                <li><a href="">Privacidad</a></li>
              </ul>
            </div>
            <div className="links">
              <h4>Ayuda</h4>
              <ul>
                <li><a onClick={() => setContenido("contacto")}>Contáctanos</a></li>
              </ul>
            </div>
            <div className="links">
              <h4>Tienda</h4>
              <ul>
                <li><a href="">Próximamente...</a></li>
              </ul>
            </div>
            <div className="links">
              <h4>Síguenos</h4>
              <div className="social-link">
                <a href="https://www.facebook.com"><i className="fab fa-facebook-f"></i></a>
                <a href="https://www.instagram.com"><i className="fab fa-instagram"></i></a>
                <a href="https://www.twitter.com"><i className="fab fa-twitter"></i></a>
                <a href="https://www.linkedin.com"><i className="fab fa-linkedin"></i></a>
                <p>&copy;Copyright-UTP2024</p>
              </div>
            </div>
          </div>
        </div>
        </footer>
        </div>
        );
    }; 